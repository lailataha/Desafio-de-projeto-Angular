Flexbox: Modelo de layout unidimensional, pode oferecer distribuição de espaço entre os itens em uma interface e recursos de alinhamento. 

Flex Container: Tag que envolve os itens, será nela que aplicaremos a propriedade "display: flex". Transforma todos os itens filhoes em flex itens. 

Propriedades Relacionadas

display: inicializador do container.
flex-direction: Faz direcionamento desses itens seja em linha ou coluna. 
flex-wrap: Se aplica para quebra de linha ou não. 
flex-flow: Abreviação para o direction e o wrap.
justify-content: Alinha os itens do container de acordo com a sua direção. 
align-items: Alinha os itens de acordo com o eixo do container. 
align-content: Alinha as linhas desse container. 

Flex item

São os elementos filhos diretos do Flex Container e também podem ser tornar Flex Container. 

Propriedades relacionadas ao flex item:

flex-grow: define o fator de crescimento. 
flex-basis: define o tamanho inicial desse item antes da distribuição do espaço restante nesse container. 
flex-shrink: define a capacidade de redução. 
flex: abreviação para grow. basis, shrink. 
order: relacionado a ordem de distribuição e listagem desses itens. 
align-self: define o alinhamento de um item especifico do container. 

Display Flex: Torna a tag um elemento do tipo flex container, e assim automaticamente todos os seus filhos diretos dessa tag, torna-se em flex itens. 

Display Flex: Inicializa o container, agrupa os elementos filhos e transforma eles de modo que eles vão respeitar o tamanho proporcional do seu conteudo.

Flex Direction: É a propriedade que estabelece o eixo principal do container, definindo assim a direção que os flex itens são colocados no flex container. 
São basicamente 2 eixos, linha (horizontal) e coluna (vertical). 

Eixos:
-row (padrão): à direção do texto, equerda para direita. 
ex: 1,2,3,4
-reow-reverse: sentido oposto à do texto.  
ex: 4,3,2,1
-colun: ordenação de cima para baixo. em coluna. 
ex:
1
2
3
4
-column-reverve: ordenação inversa, de baixo para cima. 
ex:
4
3
2
1

Flex-wrap: É a propriedade que define se os itens devem ou não quebrar a linha. 

Por padrão eles não quebram linhas, isso faz com que os flex itens sejam compactados além do limite do conteudo. 

*nowrap: é o padrão, não permite quebra de linha. 
*wrap: permite a quebra de linha assim que um dos flex itens não pode mais ser compactado. 

Wrap-reverse

*wrap: permite a quebra de linha assim que um dos flex itens não puder ser compacrado, porém na direção contrária da linha, acima. 

Flex-flow: É um atalho para as propriedades flex-direction e flex-wrap. 
Porem seu uso não é tão comum, visto que, quando mudamos o flex-direction para column, mantemos o padrão do flex-wrap que é no-wrap. 

Justify content: Essa propriedade se encarrega de alinhar os itens dentro do container de acordo com a direção pretendida e tratar da distribuição de espaçamento entre eles. 
obs: caso seus itens estejam ocupando 100% do container, ele não se aplica. 

Variações:
*flex-start: faz o alinhamento no inicio do container. 
*flex-end: leva os itens de acordo com o espaço para o final do container. 
*center: traz os elementos ao centro do container. 
*space-between: cria um espaçamento igual entre os elementos, ele coloca o primeiro elemento muito proximo ao inicio do container e o elemento final para proximo ao fim desse container. 
*space-around: os espaçamentos do meio são duas vezes maiores que o inicial e final. 

Align-items: Trata do alinhamento dos flex itens de acordo com o eixo do container. 
O alinhamento é diferente para quando os itens estão em colunas ou linhas. 
Permite o alinhamento no eixo vertical. 
Não precisa aplicar os conceitos de altura, porque ele pega as proporcionalidades. 

Tipos de alinhamento
*Center: alinha os itens ao centro. 
*stretch: padrão, e os itens crescem igualmente. 
*flex-start: alinhamento dos itens no inicio de acordo com o eixo que estamos usando. 
*flex-end: alinhamento dos itens no final. 
*baseline: alinhamento de acordo com a linha base da tipografia dos itens. 

Align-content: é responsável pelo alinhamento das linhas do container em relação ao eixo vertical do container. 
Precisamos que o container utilize a quebra de linhas e que a altura do container seja maior que a soma de linhas dos itens. 

Tipos de alinhamento:
*Center: alinhamento dos itens ao centro. 
*stretch: padrão, e os itens crescem igualmente.
*flex-start: alinhamento dos itens no inicio de acordo com o eixo que estamos usando.
*flex-end: alinhamento dos itens no final. 
*space-between: cria um espaçamento igual entre os elementos, ele coloca o primeiro elemento muito proximo ao inicio do container e o elemento final para proximo ao fim desse container.
*space-around: os espaçamentos do meio são duas vezes maiores que o inicial e final. 

Propriedades Flex Itens

Flex-grow: Define a proporcionalidade de crescimentos dos itens, respeitando o tamanho dos seus conteudos internos. 
obs: não funciona caso tenhamos adicionado justify-content ao nosso flex-container. 

Flex-basis: É uma propriedade que estabelece o tamanho inicial do item antes da distribuição de espaço restante dentro dele, usando como base o conteudo interno disposto. 

Valores possíveis
*auto: caso não tenha tamanho, este será proporcional ao conteudo do item. 
*px, %, em, ...: são valores exatos previamente definidos. 
*0 (zero): terá relação com a definição do flex-grow. 

Flex Shrink: É a propriedade que estabelece a capacidade de redução ou compreenssão do tamanho de um item. 

Flex: Essa propriedade é um atalho ou abreviação de escrita para as propriedades: grow, shrink e basis. 

Order: Essa propridade vai lidar diretamente com a ordenação dos itens. 

Align self: É a propriedade que estabelece o alinhamento individual um determinado item. 

Valores:
*Auto: valor padrão,irá respeitar a definição de align-itens do container. 
*flex-start: ao inicio do container. 
*flex-end: ao final do container. 
*center: relativo ao centro de acordo com o eixo. 
*stretch: ocupa todo o espaço relativo.
*baseline: utiliza a linha base da tipografia.  

